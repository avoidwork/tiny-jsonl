{"version":3,"file":"tiny-jsonl.umd.min.js","sources":["../src/constants.js","../src/crawl.js","../src/jsonl.js"],"sourcesContent":["export const STRING_EMPTY = \"\";\r\nexport const STRING_NEW_LINE = \"\\n\";\r\nexport const STRING_REPLACEMENT = \"$1 \";\r\nexport const STRING_STRING = \"string\";\r\nexport const STRING_OBJECT = \"object\";\r\nexport const MSG_INVALID_INPUT = \"Argument must be an Array or Object\";","import {STRING_OBJECT, STRING_STRING} from \"./constants.js\";\r\n\r\nexport function crawl (arg = {}, strings = []) {\r\n\tconst keys = Object.keys(arg);\r\n\tstrings.push(...keys);\r\n\tfor (const key of strings) {\r\n\t\tif (typeof arg[key] === STRING_STRING) {\r\n\t\t\tstrings.push(arg[key].replace(/\"/g, \"\\\\\\\"\"));\r\n\t\t} else if (Array.isArray(arg[key])) {\r\n\t\t\tfor (const value of arg[key]) {\r\n\t\t\t\tcrawl(value, strings);\r\n\t\t\t}\r\n\t\t} else if (typeof arg[key] === STRING_OBJECT) {\r\n\t\t\tcrawl(arg[key], strings);\r\n\t\t}\r\n\t}\r\n}","import {MSG_INVALID_INPUT, STRING_EMPTY, STRING_NEW_LINE, STRING_OBJECT, STRING_REPLACEMENT} from \"./constants.js\";\r\nimport {crawl} from \"./crawl.js\";\r\n\r\nexport function jsonl (arg) {\r\n\tif (typeof arg !== STRING_OBJECT) {\r\n\t\tthrow new TypeError(MSG_INVALID_INPUT);\r\n\t}\r\n\r\n\tlet result;\r\n\r\n\tif (Array.isArray(arg)) {\r\n\t\tresult = arg.map(i => jsonl(i)).join(STRING_NEW_LINE);\r\n\t} else {\r\n\t\tlet tmp = JSON.stringify(arg, null, 0);\r\n\t\tconst strings = [];\r\n\r\n\t\tcrawl(arg, strings);\r\n\r\n\t\tfor (const [idx, val] of strings.entries()) {\r\n\t\t\ttmp = tmp.replace(`\"${val}\"`, `INDEX_${idx}`);\r\n\t\t}\r\n\r\n\t\tresult = tmp.replace(/\\n/g, STRING_EMPTY).replace(/(:|,)/g, STRING_REPLACEMENT);\r\n\r\n\t\tfor (const [idx, val] of strings.entries()) {\r\n\t\t\tresult = result.replace(`INDEX_${idx}`, `\"${val}\"`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}"],"names":["STRING_STRING","STRING_OBJECT","crawl","arg","strings","keys","Object","push","key","replace","Array","isArray","value","exports","jsonl","TypeError","result","map","i","join","tmp","JSON","stringify","idx","val","entries"],"mappings":";;;;2OAAO,MAGMA,EAAgB,SAChBC,EAAgB,SCFtB,SAASC,EAAOC,EAAM,CAAE,EAAEC,EAAU,IAC1C,MAAMC,EAAOC,OAAOD,KAAKF,GACzBC,EAAQG,QAAQF,GAChB,IAAK,MAAMG,KAAOJ,EACjB,UAAWD,EAAIK,KAASR,EACvBI,EAAQG,KAAKJ,EAAIK,GAAKC,QAAQ,KAAM,aAC9B,GAAIC,MAAMC,QAAQR,EAAIK,IAC5B,IAAK,MAAMI,KAAST,EAAIK,GACvBN,EAAMU,EAAOR,eAEGD,EAAIK,KAASP,GAC9BC,EAAMC,EAAIK,GAAMJ,EAGnB,CCcAS,EAAAC,MA3BO,SAASA,EAAOX,GACtB,UAAWA,IAAQF,EAClB,MAAM,IAAIc,UFAqB,uCEGhC,IAAIC,EAEJ,GAAIN,MAAMC,QAAQR,GACjBa,EAASb,EAAIc,KAAIC,GAAKJ,EAAMI,KAAIC,KFVH,UEWvB,CACN,IAAIC,EAAMC,KAAKC,UAAUnB,EAAK,KAAM,GACpC,MAAMC,EAAU,GAEhBF,EAAMC,EAAKC,GAEX,IAAK,MAAOmB,EAAKC,KAAQpB,EAAQqB,UAChCL,EAAMA,EAAIX,QAAQ,IAAIe,KAAQ,SAASD,KAGxCP,EAASI,EAAIX,QAAQ,MFtBK,IEsBgBA,QAAQ,SFpBlB,OEsBhC,IAAK,MAAOc,EAAKC,KAAQpB,EAAQqB,UAChCT,EAASA,EAAOP,QAAQ,SAASc,IAAO,IAAIC,KAE7C,CAED,OAAOR,CACR,CAAA"}