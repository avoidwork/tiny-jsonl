{"version":3,"file":"tiny-jsonl.umd.min.js","sources":["../src/constants.js","../src/rewrite.js","../src/jsonl.js"],"sourcesContent":["export const STRING_NEW_LINE = \"\\n\";\r\nexport const STRING_REPLACEMENT = \"$1 \";\r\nexport const STRING_OBJECT = \"object\";\r\nexport const STRING_MARK = \"$\";\r\nexport const MSG_INVALID_INPUT = \"Argument must be an Array or Object\";\r\nexport const MSG_INDEX = `<IDX_${STRING_MARK}>`;","/**\r\n * Rewrite a string to be used in swaps\r\n * @param arg\r\n * @returns {string}\r\n */\r\nexport function rewrite (arg) {\r\n\treturn `\"${arg.replace(/\"/g, \"\\\\\\\"\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/\\t/g, \"\\\\t\")}\"`;\r\n}","import {\r\n\tMSG_INDEX,\r\n\tMSG_INVALID_INPUT,\r\n\tSTRING_MARK,\r\n\tSTRING_NEW_LINE,\r\n\tSTRING_OBJECT,\r\n\tSTRING_REPLACEMENT\r\n} from \"./constants.js\";\r\nimport {rewrite} from \"./rewrite.js\";\r\nimport {strings} from \"tiny-strings\";\r\n\r\n/**\r\n * Converts an Object or Array of Objects to JSONL string\r\n * @param arg\r\n * @returns {string}\r\n */\r\nexport function jsonl (arg) {\r\n\tif (typeof arg !== STRING_OBJECT) {\r\n\t\tthrow new TypeError(MSG_INVALID_INPUT);\r\n\t}\r\n\r\n\tlet result;\r\n\r\n\tif (Array.isArray(arg)) {\r\n\t\tresult = arg.map(i => jsonl(i)).join(STRING_NEW_LINE);\r\n\t} else {\r\n\t\tlet tmp = JSON.stringify(arg, null, 0);\r\n\t\tconst extracted = strings(arg, true).map(rewrite);\r\n\r\n\t\tfor (const [idx, val] of extracted.entries()) {\r\n\t\t\ttmp = tmp.replace(val, MSG_INDEX.replace(STRING_MARK, idx));\r\n\t\t}\r\n\r\n\t\tresult = tmp.replace(/(:|,)/g, STRING_REPLACEMENT);\r\n\r\n\t\tfor (const [idx, val] of extracted.entries()) {\r\n\t\t\tresult = result.replace(MSG_INDEX.replace(STRING_MARK, idx), val);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}"],"names":["MSG_INDEX","rewrite","arg","replace","exports","jsonl","TypeError","result","Array","isArray","map","i","join","tmp","JSON","stringify","extracted","strings","idx","val","entries"],"mappings":";;;;oSAAO,MAKMA,EAAY,UCAlB,SAASC,EAASC,GACxB,MAAO,IAAIA,EAAIC,QAAQ,KAAM,OAAQA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,SACjG,CCkCAC,EAAAC,MAzBO,SAASA,EAAOH,GACtB,GFf4B,iBEejBA,EACV,MAAM,IAAII,UFdqB,uCEiBhC,IAAIC,EAEJ,GAAIC,MAAMC,QAAQP,GACjBK,EAASL,EAAIQ,KAAIC,GAAKN,EAAMM,KAAIC,KFxBH,UEyBvB,CACN,IAAIC,EAAMC,KAAKC,UAAUb,EAAK,KAAM,GACpC,MAAMc,EAAYC,EAAAA,QAAQf,GAAK,GAAMQ,IAAIT,GAEzC,IAAK,MAAOiB,EAAKC,KAAQH,EAAUI,UAClCP,EAAMA,EAAIV,QAAQgB,EAAKnB,EAAUG,QF3BT,IE2B8Be,IAGvDX,EAASM,EAAIV,QAAQ,SFhCW,OEkChC,IAAK,MAAOe,EAAKC,KAAQH,EAAUI,UAClCb,EAASA,EAAOJ,QAAQH,EAAUG,QFjCV,IEiC+Be,GAAMC,EAE9D,CAED,OAAOZ,CACR,CAAA"}