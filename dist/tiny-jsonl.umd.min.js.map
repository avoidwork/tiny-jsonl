{"version":3,"file":"tiny-jsonl.umd.min.js","sources":["../src/jsonl.js","../src/constants.js"],"sourcesContent":["import {STRING_EMPTY, STRING_NEW_LINE, STRING_REPLACEMENT} from \"./constants.js\";\r\n\r\nexport function jsonl (arg) {\r\n\tlet result;\r\n\r\n\tif (Array.isArray(arg)) {\r\n\t\tresult = arg.map(i => jsonl(i)).join(STRING_NEW_LINE);\r\n\t} else {\r\n\t\tlet tmp = JSON.stringify(arg, null, 0);\r\n\t\tconst strings = tmp.match(/\"[^\"]+\"/g);\r\n\r\n\t\tfor (const [idx, val] of strings.entries()) {\r\n\t\t\ttmp = tmp.replace(val, `INDEX_${idx}`);\r\n\t\t}\r\n\r\n\t\tresult = tmp.replace(/\\n/g, STRING_EMPTY).replace(/(:|,)/g, STRING_REPLACEMENT);\r\n\r\n\t\tfor (const [idx, val] of strings.entries()) {\r\n\t\t\tresult = result.replace(`INDEX_${idx}`, val);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}","export const STRING_EMPTY = \"\";\r\nexport const STRING_NEW_LINE = \"\\n\";\r\nexport const STRING_REPLACEMENT = \"$1 \";"],"names":["exports","jsonl","arg","result","Array","isArray","map","i","join","tmp","JSON","stringify","strings","match","idx","val","entries","replace"],"mappings":";;;;2OAuBAA,EAAAC,MArBO,SAASA,EAAOC,GACtB,IAAIC,EAEJ,GAAIC,MAAMC,QAAQH,GACjBC,EAASD,EAAII,KAAIC,GAAKN,EAAMM,KAAIC,KCLH,UDMvB,CACN,IAAIC,EAAMC,KAAKC,UAAUT,EAAK,KAAM,GACpC,MAAMU,EAAUH,EAAII,MAAM,YAE1B,IAAK,MAAOC,EAAKC,KAAQH,EAAQI,UAChCP,EAAMA,EAAIQ,QAAQF,EAAK,SAASD,KAGjCX,EAASM,EAAIQ,QAAQ,MCfK,IDegBA,QAAQ,SCblB,ODehC,IAAK,MAAOH,EAAKC,KAAQH,EAAQI,UAChCb,EAASA,EAAOc,QAAQ,SAASH,IAAOC,EAEzC,CAED,OAAOZ,CACR,CAAA"}