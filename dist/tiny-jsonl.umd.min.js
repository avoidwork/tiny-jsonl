/*!
 2024 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 2.0.2
*/
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("tiny-strings")):"function"==typeof define&&define.amd?define(["exports","tiny-strings"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).jsonl={},e.tinyStrings)}(this,(function(e,n){"use strict";const t="Argument must be an Array or Object",r="<IDX_$>";function o(e){return`[${e.map((e=>"string"==typeof e?`"${e}"`:e)).join(", ")}]`.replace(", ]","]")}function i(e){return`"${e.replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}"`}function s(e){return"object"==typeof e&&null!==e}e.parse=function(e){if("string"!=typeof e)throw new TypeError(t);const n=JSON.parse(`[${e.trim().split(/(?<=})\n/).join(",")}]`);return n.length>1?n:n[0]},e.stringify=function e(f,c=!0){if(!1===s(f))throw new TypeError(t);let p;if(Array.isArray(f)){const n=f.some((e=>e instanceof Object));p=f.map((n=>s(n)?e(n,!1):n)),p=c&&n?p.join("\n"):o(p)}else{let e=JSON.stringify(f,null,0);const t=n.strings(f,!0).map(i);for(const[n,o]of t.entries())e=e.replace(o,r.replace("$",n));p=e.replace(/(:|,)/g,"$1 ");for(const[e,n]of t.entries())p=p.replace(r.replace("$",e.toString()),n)}return p}}));//# sourceMappingURL=tiny-jsonl.umd.min.js.map
