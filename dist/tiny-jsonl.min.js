/*!
 2024 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 2.0.2
*/
import{strings as r}from"tiny-strings";const e="Argument must be an Array or Object",n="<IDX_$>";function t(r){return`[${r.map((r=>"string"==typeof r?`"${r}"`:r)).join(", ")}]`.replace(", ]","]")}function o(r){return`"${r.replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}"`}function c(r){return"object"==typeof r&&null!==r}function i(r){if("string"!=typeof r)throw new TypeError(e);const n=JSON.parse(`[${r.trim().split(/(?<=})\n/).join(",")}]`);return n.length>1?n:n[0]}function p(i,s=!0){if(!1===c(i))throw new TypeError(e);let a;if(Array.isArray(i)){const r=i.some((r=>r instanceof Object));a=i.map((r=>c(r)?p(r,!1):r)),a=s&&r?a.join("\n"):t(a)}else{let e=JSON.stringify(i,null,0);const t=r(i,!0).map(o);for(const[r,o]of t.entries())e=e.replace(o,n.replace("$",r));a=e.replace(/(:|,)/g,"$1 ");for(const[r,e]of t.entries())a=a.replace(n.replace("$",r.toString()),e)}return a}export{i as parse,p as stringify};//# sourceMappingURL=tiny-jsonl.min.js.map
