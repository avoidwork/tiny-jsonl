/*!
 2024 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 2.0.4
*/
import{strings as r}from"tiny-strings";const e="Argument must be an Array or Object",n="<IDX_$>";function t(r){return`"${r.replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}"`}function o(r){return"object"==typeof r&&null!==r}function c(r){if("string"!=typeof r)throw new TypeError(e);const n=JSON.parse(`[${r.trim().split(/(?<=})\n/).join(",")}]`);return n.length>1?n:n[0]}function i(c,l=!0){if(!1===o(c))throw new TypeError(e);let p;if(Array.isArray(c)&&l){const r=c.some((r=>r instanceof Object));p=c.map((r=>o(r)?i(r,!1):r)),p=r?p.join("\n"):function(r){return`[${r.map((r=>"string"==typeof r?`"${r}"`:null===r?"null":r)).join(", ")}]`.replace(", ]","]")}(p)}else{let e=JSON.stringify(c,null,0);const o=r(c,!0).map(t);for(const[r,t]of o.entries())e=e.replace(t,n.replace("$",r));p=e.replace(/(:|,)/g,"$1 ");for(const[r,e]of o.entries())p=p.replace(n.replace("$",r.toString()),e)}return p}export{c as parse,i as stringify};//# sourceMappingURL=tiny-jsonl.min.js.map
